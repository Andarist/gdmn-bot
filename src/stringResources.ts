type FormatFunc = (...args: any[]) => string;

export interface ILocString {
  en: string | null;
  ru: string | null | FormatFunc;
  be: string | null;
};

export const stringResources = {
  askCompanyName: {
    en: 'Hi!\n\nTo receive payslips you need to sign up.\n\nEnter organization name.',
    ru: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –ª–∏—Å—Ç–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.',
    be: '–ü—Ä—ã–≤—ñ—Ç–∞–Ω–Ω–µ!\n\n–î–ª—è –∞—Ç—Ä—ã–º–∞–Ω–Ω—è —Ä–∞–∑–ª—ñ–∫–æ–≤—ã—Ö –ª—ñ—Å—Ç–∫–æ—û –Ω–µ–∞–±—Ö–æ–¥–Ω–∞ –∑–∞—Ä—ç–≥—ñ—Å—Ç—Ä–∞–≤–∞—Ü—Ü–∞.\n\n–£–≤—è–¥–∑—ñ—Ü–µ –Ω–∞–∑–≤—É –∞—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ã—ñ.'
  },
  unknownCompanyName: {
    en: null,
    ru: '–ú—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º.\n\n–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –æ—à–∏–±–ª–∏—Å—å –ø—Ä–∏ –≤–≤–æ–¥–µ –∏–ª–∏ –≤–∞—à–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º—É "–ì–µ–¥—ã–º–∏–Ω: –†–∞—Å—á–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã".\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —Ä–∞–∑.',
    be: null
  },
  askPersonalNumber: {
    en: null,
    ru: '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∏–∑ –ø–∞—Å–ø–æ—Ä—Ç–∞.',
    be: null
  },
  test: {
    en: null,
    ru: 'test',
    be: null
  },
  mainMenuCaption: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é.',
    be: null
  },
  goodBye: {
    en: null,
    ru: '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏ —Å –Ω–∞–º–∏.',
    be: null
  },
  payslip: {
    en: null,
    ru: '–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–∞—Å—á–µ—Ç–Ω—ã–π –ª–∏—Å—Ç–æ–∫...',
    be: null
  },
  payslipForPeriod: {
    en: null,
    ru: '–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–∞—Å—á–µ—Ç–Ω—ã–π –ª–∏—Å—Ç–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥...',
    be: null
  },
  comparePayslip: {
    en: null,
    ru: '–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –ª–∏—Å—Ç–∫–æ–≤...',
    be: null
  },
  sayGoodbye: {
    en: null,
    ru: '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –Ω–∞—à —á–∞—Ç-–±–æ—Ç.',
    be: null
  },
  showSettings: {
    en: null,
    ru: (lang: Language, curr: string) => `–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\t–Ø–∑—ã–∫: ${lang}\n\t–í–∞–ª—é—Ç–∞: ${curr}`,
    be: null
  } as ILocString,
  showSelectedDate: {
    en: null,
    ru: '–í—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞...',
    be: null
  },
  shortMonth0: {
    en: 'jan',
    ru: '—è–Ω–≤',
    be: '—Å—Ç—É'
  },
  shortMonth1: {
    en: 'feb',
    ru: '—Ñ–µ–≤',
    be: '–ª—é—Ç'
  },
  shortMonth2: {
    en: 'mar',
    ru: '–º–∞—Ä',
    be: '—Å–∞–∫'
  },
  shortMonth3: {
    en: 'apr',
    ru: '–∞–ø—Ä',
    be: '–∫—Ä–∞'
  },
  shortMonth4: {
    en: 'may',
    ru: '–º–∞–π',
    be: '—Ç—Ä–∞'
  },
  shortMonth5: {
    en: 'jun',
    ru: '–∏—é–Ω',
    be: '—á—ç—Ä'
  },
  shortMonth6: {
    en: 'jul',
    ru: '–∏—é–ª',
    be: '–ªi–ø'
  },
  shortMonth7: {
    en: 'aug',
    ru: '–∞–≤–≥',
    be: '–∂–Ωi'
  },
  shortMonth8: {
    en: 'sep',
    ru: '—Å–µ–Ω',
    be: '–≤–µ—Ä'
  },
  shortMonth9: {
    en: 'oct',
    ru: '–æ–∫—Ç',
    be: '–∫–∞—Å'
  },
  shortMonth10: {
    en: 'nov',
    ru: '–Ω–æ—è',
    be: '–ª—ñ—Å'
  },
  shortMonth11: {
    en: 'dec',
    ru: '–¥–µ–∫',
    be: '—Å–Ω–µ'
  },
  selectDB: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞.',
    be: null
  },
  selectDE: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞.',
    be: null
  },
  selectDB2: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.',
    be: null
  },
  selectMonth: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü.',
    be: null
  },
  menuPayslip: {
    en: null,
    ru: 'üí∞ –†–∞—Å—á–µ—Ç–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: null
  },
  menuDetailedPayslip: {
    en: null,
    ru: 'üí∞ –ü–æ–¥—Ä–æ–±–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: null
  },
  menuPayslipForPeriod: {
    en: null,
    ru: 'üí∞ –õ–∏—Å—Ç–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥',
    be: null
  },
  menuComparePayslip: {
    en: null,
    ru: 'üí∞ –°—Ä–∞–≤–Ω–∏—Ç—å...',
    be: null
  },
  menuSettings: {
    en: null,
    ru: 'üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã',
    be: null
  },
  menuLogout: {
    en: null,
    ru: 'üö™ –í—ã–π—Ç–∏',
    be: null
  },
  menuHelp: {
    en: null,
    ru: '‚ùì',
    be: null
  },
  menuSelectLanguage: {
    en: null,
    ru: '–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫',
    be: null
  },
  menuSelectCurrency: {
    en: null,
    ru: '–í—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É',
    be: null
  },
  languageRU: {
    en: null,
    ru: '–†—É—Å—Å–∫–∏–π',
    be: null
  },
  languageBE: {
    en: null,
    ru: '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π',
    be: null
  },
  languageEN: {
    en: null,
    ru: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
    be: null
  },
  currencyBYN: {
    en: null,
    ru: '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å',
    be: null
  },
  currencyUSD: {
    en: null,
    ru: '–î–æ–ª–ª–∞—Ä –°–®–ê',
    be: null
  },
  currencyEUR: {
    en: null,
    ru: '–ï–≤—Ä–æ',
    be: null
  },
  currencyRUR: {
    en: null,
    ru: '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å',
    be: null
  },
  currencyPLN: {
    en: null,
    ru: '–ü–æ–ª—å—Å–∫–∏–π –∑–ª–æ—Ç—ã–π',
    be: null
  },
  currencyUAH: {
    en: null,
    ru: '–£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≥—Ä–∏–≤–Ω–∞',
    be: null
  },
  btnPrevYear: {
    en: null,
    ru: ' < ',
    be: null
  },
  btnNextYear: {
    en: null,
    ru: ' > ',
    be: null
  },
  btnBackToMenu: {
    en: null,
    ru: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...',
    be: null
  },
  btnBackToSettingsMenu: {
    en: null,
    ru: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...',
    be: null
  },
  cantLoadRate: {
    en: null,
    ru: (currencyId: string) => `–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã ${currencyId}`,
    be: null
  } as ILocString,
};

export type Language = keyof ILocString;
export type StringResource = keyof typeof stringResources;

export const getLocString = (r: ILocString, lang: Language, ...args: any[]) => {
  const sr = r[lang]
    ?? r['be']
    ?? r['en']
    ?? r['ru'];

  if (typeof sr === 'function') {
    return sr(...args);
  }
  else if (sr === null) {
    throw new Error(`String resource isn't defined for a given lanuage.`)
  } else {
    return sr;
  }
};

export const str2Language = (s?: string): Language => {
  switch (s?.toLowerCase()) {
    case 'be': return 'be';
    case 'en': return 'en';
  default:
    return 'ru';
  }
};

export interface ITName {
  name: string;
  fullName?: string;
};

export type LName = {
  [lang in Language]?: ITName;
};

export function getLName(n: LName, langPref: Language[] = [], getFullName: boolean = false): string {
  for (let i = 0; i < langPref.length; i++) {
    const tn = n[langPref[i]];
    if (tn) {
      return (getFullName && tn.fullName) ? tn.fullName : tn.name;
    }
  }

  return (
    (getFullName ? n.ru?.fullName : undefined) ?? n.ru?.name ??
    (getFullName ? n.be?.fullName : undefined) ?? n.be?.name ??
    (getFullName ? n.en?.fullName : undefined) ?? n.en?.name ??
    ''
  );
};

/**
 * –§–æ—Ä–º–∞—Ç –∫–æ–¥–∞ —è–∑—ã–∫–∞
 * @param lang_code
 */
 /*
export const getLanguage = (lang_code?: string): Language => {
    if (!lang_code) {
      return 'ru'
    }
    if (lang_code.indexOf('-')) {
      lang_code = lang_code.split('-')[0]
    }
    if (lang_code === 'ru') {
      return 'ru'
    } else if (lang_code === 'be') {
        return 'be'
      } else {
      return 'en'
    }
};
*/
