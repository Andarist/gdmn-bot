import { DialogState, IAccountLink } from "./types";
import { FileDB } from "./util/fileDB";
import path from 'path';

export interface IMenuButton {
  type: 'BUTTON';
  caption: string;
  command: string;
};

export interface IMenuLink {
  type: 'LINK';
  caption: string;
  url: string;
};

export type MenuItem = IMenuButton | IMenuLink;

export type Menu = MenuItem[][];

const keyboardLogin: Menu = [
  [
    { type: 'BUTTON', caption: '‚úè –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', command: 'login' },
    { type: 'LINK', caption: '‚ùì', url: 'http://gsbelarus.com' }
  ]
];

export const keyboardMenu: Menu = [
  [
    { type: 'BUTTON', caption: 'üí∞ –†–∞—Å—á–µ—Ç–Ω—ã–π –ª–∏—Å—Ç–æ–∫', command: 'paySlip' },
    { type: 'BUTTON', caption: 'üí∞ –ü–æ–¥—Ä–æ–±–Ω—ã–π –ª–∏—Å—Ç–æ–∫', command: 'detailPaySlip' }
  ],
  [
    { type: 'BUTTON', caption: 'üí∞ –õ–∏—Å—Ç–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥', command: 'paySlipByPeriod' },
    { type: 'BUTTON', caption: 'üí∞ –°—Ä–∞–≤–Ω–∏—Ç—å..', command: 'paySlipCompare' }
  ],
  [
    { type: 'BUTTON', caption: 'üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã', command: 'settings' },
    { type: 'BUTTON', caption: 'üö™ –í—ã–π—Ç–∏', command: 'logout' }
  ],
  [
    { type: 'LINK', caption: '‚ùì', url: 'http://gsbelarus.com' }
  ]
];

export class Bot {

  private _accountLink: FileDB<IAccountLink>;
  private _dialogStates: FileDB<DialogState>;

  constructor(dir: string) {
    this._accountLink = new FileDB<IAccountLink>(path.resolve(process.cwd(), `data/${dir}/accountlink.json`), {});
    this._dialogStates = new FileDB<DialogState>(path.resolve(process.cwd(), `data/${dir}/dialogstates.json`), {});
  }

  get accountLink() {
    return this._accountLink;
  }

  get dialogStates() {
    return this._dialogStates;
  }

  /**
   * –ü–æ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   * @param chatId
   * @param message
   */
  sendMessage(chatId: string, message: string, menu?: Menu, markdown?: boolean) {

  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å—Ç—É–ø–∏–≤—à–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã –∏–∑ —á–∞—Ç–∞.
   * @param chatId
   * @param message
   */
  process(chatId: string, message: string) {

  }

  /**
   * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —á–∞—Ç –±–æ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–æ–º.
   * @param chatId
   */
  start(chatId: string) {
    const link = this.accountLink.read(chatId);

    console.log('start');

    if (!link) {
      this.dialogStates.merge(chatId, { type: 'INITIAL', lastUpdated: new Date().getTime() });
      this.sendMessage(chatId,
        '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º! –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ.',
        keyboardLogin);
    } else {
      this.dialogStates.merge(chatId, { type: 'LOGGED_IN', lastUpdated: new Date().getTime() });
      this.sendMessage(chatId,
        '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.',
        keyboardMenu);
    }
  }

  /**
   * –í—ã–∑–æ–≤ —Å–ø—Ä–∞–≤–∫–∏.
   * @param chatId
   * @param state
   */
  help(chatId: string, state: DialogState) {

  }

  finalize() {
    this.accountLink.flush();
    this.dialogStates.flush();
  }
};