%YAML 1.1
--- 
StructureVersion: "1.0"
Properties: 
  RUID: 1193786357_1320926323
  Name: "БОТ.Бройлеры"
  Caption: "БОТ.Бройлеры"
  Version: "1.0.0.3"
  Optional: False
  Internal: True
  MD5: 4E9E5C317856C705D4380C6F8948696E
Uses: 
  - "1193786287_1320926323 БОТ.Экспорт файлов"
Objects: 
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1193785764_1320926323
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "bot_PreparePaySlip"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-04-13T14:56:24+03:00
      DISPLAYSCRIPT: | 
        BOT_PREPAREPAYSLIP
        BOT_PREPAREPAYSLIP_ROLLBACK
        BOT_TRANSFORMDATE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QKAAAAQ1VTVE9NRVJJRAoAAABDVVNUT01FUklEAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUBgAAAFBFUklPRAYAAABQRVJJT0QAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QEAAAASlNPTgQAAABKU09OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Function bot_PreparePaySlip(ByVal customerId, ByVal Period, ByRef JSON)
        
          dim qSel, Creator, Transaction
          set Creator = new TCreator
          set Transaction = Creator.GetObject(nil, "TIBTransaction", "")
          Transaction.Defaultdatabase = IBLogin.Database
          if not Transaction.InTransaction then
            Transaction.StartTransaction
          end if
        
          except bot_PreparePaySlip_RollBack(Transaction)
        
          set qSel = Creator.GetObject(nil, "TIBSQL", "")
          qSel.Transaction = Transaction
          qSel.SQL.Text = _
            "EXECUTE BLOCK (DB DATE = :DB, DE DATE = :DE) " & _
            "RETURNS (OnDateBegin DATE, OnDateEnd DATE, PersonalNumber VARCHAR(40), DepartmentName VARCHAR(60), PositionName VARCHAR(180), " & _
            "  Salary DECIMAL(15,4), HiringDate DATE, DismissalDate DATE, EndSaldo DECIMAL(15,4), HourRate DECIMAL(15,4), " & _
            "  FeeTypeName VARCHAR(90), typeId VARCHAR(22), Category VARCHAR(60),  S DECIMAL(15,4), " & _
            "  How  DECIMAL(15,2), Dow  DECIMAL(15,2), IncMonth INTEGER, IncYear INTEGER) " & _
            "AS " & _
            "  DECLARE TotalDocKey         INTEGER; " & _
            "  DECLARE EmployeeKey         INTEGER; " & _
            " " & _
            "  DECLARE FeeTypeDescription  VARCHAR(30); " & _
            "   " & _
            "  DECLARE CurMonth            INTEGER; " & _
            "  DECLARE CurYear             INTEGER; " & _
            "  DECLARE IncDate             DATE; " & _
            "  DECLARE HowStr              VARCHAR(30); " & _
            " " & _
            "BEGIN " & _
            "  FOR " & _
            "    SELECT  " & _
            "      p.PERSONALNUMBER            AS PersonalNumber, " & _
            "      t.DOCUMENTKEY               AS TotalDocKey, " & _
            "      tline.USR$EMPLKEY           AS EmployeeKey, " & _
            "      t.USR$DATEBEGIN             AS OnDateBegin, " & _
            "      t.USR$DATEEND               AS OnDateEnd, " & _
            "      dep.NAME                    AS DepartmentName, " & _
            "      pos.NAME                    AS PositionName, " & _
            "      ml.USR$MSALARY              AS Salary, " & _
            "      workterm.USR$DATEBEGIN      AS HiringDate, " & _
            "      coalesce(workterm.USR$DATEEND, null)        AS DismissalDate, " & _
            "      tline.USR$ENDSALDO, " & _
            "      CAST(0 AS NUMERIC(15,4)) AS HourRate " & _
            "    FROM USR$WG_TOTAL t " & _
            "      LEFT JOIN USR$WG_TOTALLINE tline ON tline.MASTERKEY = t.DOCUMENTKEY " & _
            "      LEFT JOIN USR$WG_P_EMPLMOVESTATE(tline.USR$EMPLKEY, t.USR$DATEEND) state ON 1 = 1 " & _
            "      LEFT JOIN USR$WG_MOVEMENTLINE ml ON ml.DOCUMENTKEY = state.ID " & _
            "      LEFT JOIN GD_CONTACT dep ON dep.ID = ml.USR$DEPTKEY " & _
            "      LEFT JOIN WG_POSITION pos ON pos.ID = ml.USR$POSITIONKEY " & _
            "      LEFT JOIN GD_PEOPLE p ON p.CONTACTKEY = tline.USR$EMPLKEY " & _
            "      LEFT JOIN usr$wg_emplworkterm workterm ON workterm.USR$FIRSTMOVEKEY = ml.USR$FIRSTMOVE " & _
            "    WHERE COALESCE(p.PERSONALNUMBER, '') <> '' AND " & _
            "      t.USR$DATEBEGIN >= :DB AND t.USR$DATEEND <= :DE " & _
            "      AND (ml.USR$MOVEMENTTYPE <> 3 OR tline.USR$CREDIT <> 0 OR tline.USR$DEBIT <> 0) " & _
            "    ORDER BY p.PERSONALNUMBER, t.USR$DATEBEGIN " & _
            "    INTO :TotalDocKey, :EmployeeKey, :PersonalNumber, :OnDateBegin, :OnDateEnd, :DepartmentName, :PositionName, " & _
            "      :Salary, :HiringDate, :DismissalDate, :EndSaldo, :HourRate " & _
            "    DO " & _
            "    BEGIN " & _
            "      CurMonth = EXTRACT(MONTH FROM OnDateBegin); " & _
            "      CurYear = EXTRACT(YEAR FROM OnDateBegin); " & _
            "      FOR " & _
            "        SELECT " & _
            "          ft.USR$NAME                          AS Name, " & _
            "          CAST(r.XID AS VARCHAR(12)) || '_' || CAST(r.DBID AS VARCHAR(12)) AS typeId, " & _
            "          it.USR$DATEBEGIN                     AS IncDate, " & _
            "          EXTRACT(MONTH FROM it.USR$DATEBEGIN) AS IncMonth, " & _
            "          EXTRACT(YEAR FROM  it.USR$DATEBEGIN) AS IncYear, " & _
            "          CASE " & _
            "            WHEN ft.ID = <RUID XID = 147653395 DBID = 119619099/> THEN 'PENSION_TAX' " & _
            "            WHEN ft.ID = <RUID XID = 147567139 DBID = 119619099/> THEN 'INCOME_TAX' " & _
            "            WHEN ft.ID = <RUID XID = 147653396 DBID = 119619099/> THEN 'TRADE_UNION_TAX'  /*налог*/ " & _
            "            WHEN NOT gr_adv.FEETYPE IS NULL THEN 'ADVANCE'                    /*аванс*/ " & _
            "            WHEN COALESCE(ft.USR$DEDUCTION, 0) = 1 THEN 'DEDUCTION'           /*удержание*/ " & _
            "            ELSE 'ACCRUAL'                                                    /*начисление*/ " & _
            "          END  AS Category, " & _
            "          SUM( IIF(ft.ID IN (<RUID XID = 147653395 DBID = 119619099/>, " & _
            "                             <RUID XID = 147567139 DBID = 119619099/>, " & _
            "                             <RUID XID = 147653396 DBID = 119619099/>) " & _
            "                             OR NOT gr_adv.FEETYPE IS NULL " & _
            "                             OR COALESCE(ft.USR$DEDUCTION, 0) = 1, " & _
            "                             cr.USR$CREDIT, cr.USR$DEBIT  ) ) AS S, " & _
            "          SUM(cr.USR$HOW)                      AS How, " & _
            "          SUM(cr.USR$DOW)                      AS Dow " & _
            " " & _
            "        FROM USR$WG_TBLCHARGE cr " & _
            "        LEFT JOIN USR$WG_TOTAL it ON it.DOCUMENTKEY = cr.USR$INCDOCKEY " & _
            "        LEFT JOIN USR$WG_FEETYPE ft ON ft.ID = cr.USR$FEETYPEKEY " & _
            "        LEFT JOIN USR$WG_P_GETFEETYPEBYGROUP(<RUID XID = 184134911 DBID = 1194748640/>) gr_adv ON gr_adv.FEETYPE = ft.ID " & _
            "        LEFT JOIN GD_P_GETRUID(ft.ID) r ON 1 = 1 " & _
            "        WHERE cr.USR$TOTALDOCKEY = :TotalDocKey " & _
            "          AND cr.USR$EMPLKEY = :EmployeeKey " & _
            "          AND ft.ID <> <RUID XID = 147582378 DBID = 119619099/> /*выдача заплаты*/ " & _
            "        GROUP BY 1, 2, 3, 4, 5, 6 " & _
            "        INTO :FeeTypeName, :typeId, " & _
            "             :IncDate, :IncMonth, :IncYear, :Category, " & _
            "             :S, :How, :Dow " & _
            "      DO " & _
            "        BEGIN " & _
            "          IF (How IS NULL) THEN How = 0; " & _
            "          IF (Dow IS NULL) THEN Dow = 0; " & _
            " " & _
            "          IF  (IncMonth <> CurMonth OR IncYear <> CurYear OR How > 0 OR Dow > 0 ) THEN " & _
            "          BEGIN " & _
            "            FeeTypeDescription = ''; " & _
            "            IF (Dow > 0) THEN FeeTypeDescription = Dow || ' дн'; " & _
            "            IF (How > 0) THEN " & _
            "            BEGIN " & _
            "              SELECT TS FROM USR$WG_P_GETTIMESTR(:How) INTO :HowStr; " & _
            "              IF (FeeTypeDescription <> '') THEN " & _
            "                FeeTypeDescription = FeeTypeDescription || ', '; " & _
            "              FeeTypeDescription = FeeTypeDescription || HowStr; " & _
            "            END " & _
            "            IF  (IncMonth <> CurMonth OR IncYear <> CurYear) THEN " & _
            "            BEGIN " & _
            "              IF (FeeTypeDescription <> '') THEN " & _
            "                FeeTypeDescription = FeeTypeDescription || ', '; " & _
            "              FeeTypeDescription = FeeTypeDescription || IncMonth || '.' || IncYear ; " & _
            "            END " & _
            "            ELSE " & _
            "              BEGIN " & _
            "              IncMonth = 0; " & _
            "              IncYear = 0; " & _
            "              END " & _
            "            FeeTypeName = FeeTypeName || ' (' || FeeTypeDescription || ')' ; " & _
            " " & _
            "          END " & _
            "          ELSE " & _
            "            BEGIN " & _
            "              IncMonth = 0; " & _
            "              IncYear = 0; " & _
            "            END " & _
            "          SUSPEND; " & _
            "        END " & _
            "      FeeTypeName = ''; " & _
            "      S = 0; " & _
            "      IncMonth = 0; " & _
            "      IncYear = 0; " & _
            "      How = 0; " & _
            "      Dow = 0; " & _
            "       " & _
            "      /*льготы*/ " & _
            "      FOR " & _
            "        SELECT " & _
            "          pt.USR$NAME        AS Name, " & _
            "          CAST(r.XID AS VARCHAR(12)) || '_' || CAST(r.DBID AS VARCHAR(12)) AS typeId, " & _
            "          'PRIVILAGE'        AS Category, " & _
            "          SUM(cha.USR$SUMMA) AS Summa " & _
            "        FROM USR$WG_CHREGADDINFO cha " & _
            "         JOIN USR$WG_PRIVILEGETYPE pt ON pt.ID = cha.USR$PRIVTYPEKEY " & _
            "         LEFT JOIN GD_P_GETRUID(pt.ID) r ON 1 = 1 " & _
            "        WHERE cha.USR$EMPLKEY = :EmployeeKey " & _
            "          AND cha.USR$TOTALDOCKEY = :TotalDocKey " & _
            "        GROUP BY 1, 2, 3 " & _
            "        INTO :FeeTypeName, :typeId, :Category, :S " & _
            "      DO " & _
            "        SUSPEND; " & _
            "         " & _
            "      /* вычеты*/ " & _
            "      FOR " & _
            "        SELECT " & _
            "          dt.USR$NAME        AS Name, " & _
            "          CAST(r.XID AS VARCHAR(12)) || '_' || CAST(r.DBID AS VARCHAR(12)) AS typeId, " & _
            "          'TAX_DEDUCTION'    AS Category, " & _
            "          SUM(cha.USR$SUMMA) AS Summa " & _
            "        FROM USR$WG_CHREGADDINFO cha " & _
            "          JOIN USR$WG_TAXINCOMDEDEDUCTTYPE dt ON dt.ID = cha.USR$INCTAXDEDTYPEKEY " & _
            "          LEFT JOIN GD_P_GETRUID(dt.ID) r ON 1 = 1 " & _
            "        WHERE cha.USR$EMPLKEY = :EmployeeKey " & _
            "          AND cha.USR$TOTALDOCKEY = :TotalDocKey " & _
            "        GROUP BY 1, 2, 3 " & _
            "        INTO  :FeeTypeName, :typeId, :Category, :S " & _
            "      DO " & _
            "        SUSPEND; " & _
            "      /*Оклад*/ " & _
            "      FeeTypeName = 'Оклад'; " & _
            "      typeId = 'salary'; " & _
            "      Category = ''; " & _
            "      S = salary; " & _
            "      SUSPEND; " & _
            "       " & _
            "      /*Сальдо на конец*/ " & _
            "      FeeTypeName = 'Сальдо на конец'; " & _
            "      typeId = 'saldo'; " & _
            "      Category = ''; " & _
            "      S = EndSaldo; " & _
            "      SUSPEND; " & _
            " " & _
            "    END " & _
            "END; "
          qSel.ParamByName("DB").AsDateTime = Period(0)
          qSel.ParamByName("DE").AsDateTime = Period(1)
          qSel.ExecQuery
        
          dim oRoot, oBody, qArr, oLng, oData, oItem, incDate, oEmployee, isDataNull, PersonalNumber
          dim oDataArr, oItemSalary, oItemSaldo, oDeptName, oPosName
          dim Jsons(), j
          j = -1
          PersonalNumber = ""
          while not qSel.eof
            isDataNull = true
            set oData = new JsonObject
            if qSel.FieldByName("How").AsCurrency > 0 then
              call oData.AddProperty_Simple("hours", qSel.FieldByName("How").AsCurrency)
              isDataNull = false
            end if
            if qSel.FieldByName("Dow").AsCurrency > 0 then
              call oData.AddProperty_Simple("days", qSel.FieldByName("Dow").AsCurrency)
              isDataNull = false
            end if
            if qSel.FieldByName("IncMonth").AsInteger > 0 then
              call oData.AddProperty_Simple("incMonth", qSel.FieldByName("IncMonth").AsInteger)
              isDataNull = false
            end if
            if qSel.FieldByName("incYear").AsInteger > 0 then
              call oData.AddProperty_Simple("incYear", qSel.FieldByName("incYear").AsInteger)
              isDataNull = false
            end if
            
            set oItem = new JsonObject
        
            call oItem.AddProperty_Simple("typeId", qSel.FieldByName("typeId").AsString)
            call oItem.AddProperty_Simple("dateBegin", bot_TransformDate(qSel.FieldByName("OnDateBegin").AsDateTime))
            call oItem.AddProperty_Simple("dateEnd", bot_TransformDate(qSel.FieldByName("OnDateEnd").AsDateTime))
            call oItem.AddProperty_Simple("s", qSel.FieldByName("S").AsCurrency)
        
            if not isDataNull then
              call oItem.AddProperty_Object("adddata", oData)
            end if
        
            qSel.Next
            'добавим весь объект по сотруднику в массив
            if qSel.FieldByName("PersonalNumber").AsString <> PersonalNumber then
              set oEmployee = new JsonObject
              call oEmployee.AddProperty_Simple("employeeId", Trim(qSel.FieldByName("PersonalNumber").AsString))
              call oEmployee.AddProperty_Simple("year", Year(qSel.FieldByName("OnDateBegin").AsDateTime))
              
              set oLng = new JSonObject
              set oDeptName = new JSonObject
              call oDeptName.AddProperty_Simple("name", qSel.FieldByName("DepartmentName").AsString)
              call oLng.AddProperty_Object("ru", oDeptName)
              
              call oEmployee.AddProperty_Object("deptName", oLng)
              
              set oLng = new JSonObject
              set oPosName = new JSonObject
              call oPosName.AddProperty_Simple("name", qSel.FieldByName("PositionName").AsString)
              call oLng.AddProperty_Object("ru", oPosName)
              call oEmployee.AddProperty_Object("posName", oLng)
              
              if not IsNull(qSel.FieldByName("HiringDate").AsVariant) then
                call oEmployee.AddProperty_Simple("hiringDate", bot_TransformDate(qSel.FieldByName("HiringDate").AsDateTime))
              end if
              if not IsNull(qSel.FieldByName("DismissalDate").AsVariant) then
                call oEmployee.AddProperty_Simple("dismissalDate", bot_TransformDate(qSel.FieldByName("DismissalDate").AsDateTime))
              end if
              
              set oRoot = new JSonObject
              call oRoot.AddProperty_Simple("customerId", customerId)
              call oRoot.AddProperty_Simple("dataType", "paySlip")
              set oBody = new JSonArray
              set oDataArr = new JSonArray
        
              call oEmployee.AddProperty_Object("data", oDataArr)
              call oBody.AddValue(oEmployee)
              call oRoot.AddProperty_Object("objData", oBody)
              j = j + 1
              redim preserve Jsons(j)
            end if
            'добавим объект начисления\удержания в массив
            call oDataArr.AddValue(oItem)
            Jsons(j) = oRoot.Json
            PersonalNumber = qSel.FieldByName("PersonalNumber").AsString
          wend
        
          if Transaction.InTransaction then
            Transaction.Commit
          end if
        
          JSON = Jsons
        
        End Function
        
        sub bot_PreparePaySlip_RollBack(Transaction)
          if Transaction.InTransaction then
            Transaction.Rollback
          end if
        end sub
        
        function bot_TransformDate(pDate)
          bot_TransformDate = Year(pDate) & "." & Month(pDate) & "." & Day(pDate)
        end function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1193785027_1320926323
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "bot_PrepareAccDed"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-03-26T09:11:26+03:00
      DISPLAYSCRIPT: | 
        BOT_PREPAREACCDED
        BOT_PREPAREACCDED_ROLLBACK
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QKAAAAQ1VTVE9NRVJJRAoAAABDVVNUT01FUklEAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUBAAAAEpTT04EAAAASlNPTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Function bot_PrepareAccDed(customerId, ByRef JSON)
        
          dim qSel, Creator, Transaction
          set Creator = new TCreator
          set Transaction = Creator.GetObject(nil, "TIBTransaction", "")
          Transaction.Defaultdatabase = IBLogin.Database
          if not Transaction.InTransaction then
            Transaction.StartTransaction
          end if
          
          except bot_PrepareAccDed_RollBack(Transaction)
          
          set qSel = Creator.GetObject(nil, "TIBSQL", "")
          qSel.Transaction = Transaction
          qSel.SQL.Text = _
            "SELECT  " & _
            "  CASE " & _
            "    WHEN ft.ID = <RUID XID = 147653395 DBID = 119619099/> THEN 'PENSION_TAX' " & _
            "    WHEN ft.ID = <RUID XID = 147567139 DBID = 119619099/> THEN 'INCOME_TAX' " & _
            "    WHEN ft.ID = <RUID XID = 147653396 DBID = 119619099/> THEN 'TRADE_UNION_TAX'  /*налог*/ " & _
            "    WHEN NOT gr_adv.FEETYPE IS NULL THEN 'ADVANCE'                        /*аванс*/ " & _
            "    WHEN COALESCE(ft.USR$DEDUCTION, 0) = 1 THEN 'DEDUCTION'               /*удержание*/ " & _
            "    ELSE 'ACCRUAL'                                                        /*начисление*/ " & _
            "  END  AS category, " & _
            "  ft.USR$NAME                                                       AS name, " & _
            "  CAST(r.XID AS VARCHAR(12)) || '_' || CAST(r.DBID AS VARCHAR(12))  AS typeId " & _
            "FROM USR$WG_FEETYPE ft " & _
            "  LEFT JOIN USR$WG_P_GETFEETYPEBYGROUP(<RUID XID = 184134911 DBID = 1194748640/>) gr_adv ON gr_adv.FEETYPE = ft.ID " & _
            "  LEFT JOIN GD_P_GETRUID(ft.ID) r ON 1 = 1 " & _
            "   " & _
            "UNION ALL " & _
            "SELECT " & _
            "  'PRIVILAGE'    AS category, " & _
            "  pt.USR$NAME    AS name, " & _
            "  CAST(r.XID AS VARCHAR(12)) || '_' || CAST(r.DBID AS VARCHAR(12)) AS typeId " & _
            "FROM  USR$WG_PRIVILEGETYPE pt " & _
            "LEFT JOIN GD_P_GETRUID(pt.ID) r ON 1 = 1 " & _
            " " & _
            "UNION ALL " & _
            "SELECT " & _
            "  'TAX_DEDUCTION'    AS category, " & _
            "  d.USR$NAME    AS name, " & _
            "  CAST(r.XID AS VARCHAR(12)) || '_' || CAST(r.DBID AS VARCHAR(12)) AS typeId " & _
            "FROM USR$WG_TAXINCOMDEDEDUCTTYPE d " & _
            "LEFT JOIN GD_P_GETRUID(d.ID) r ON 1 = 1 " & _
            " " & _
            "ORDER BY 1, 2 "
        
          qSel.ExecQuery
          
          dim oRoot, oBody, qArr, oLng, oData, oLngName
          set oRoot = new JSonObject
          set oBody = new JSonObject
        
          call oRoot.AddProperty_Simple("customerId", customerId)
          call oRoot.AddProperty_Simple("dataType", "accDedRef")
        
          while not qSel.eof
            set oData = new JsonObject
            set oLng = new JSonObject
            set oLngName = new JSonObject
            call oLngName.AddProperty_Simple("name", qSel.FieldByName("name").AsString)
            call oLng.AddProperty_Object("ru", oLngName)
            call oData.AddProperty_Simple("type", Trim(qSel.FieldByName("category").AsString))
            call oData.AddProperty_Object("name", oLng)
            call oBody.AddProperty_Object(qSel.FieldByName("typeId").AsString, oData)
            qSel.Next
          wend
          call oRoot.AddProperty_Object("objData", oBody)
          
          if Transaction.InTransaction then
            Transaction.Commit
          end if
        
          JSON = oRoot.Json
        
        End Function
        
        sub bot_PrepareAccDed_RollBack(Transaction)
          if Transaction.InTransaction then
            Transaction.Rollback
          end if
        end sub
        