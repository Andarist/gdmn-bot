import { IDate, ICurrencyRate } from "./types";
import { date2str } from "./util/utils";

type FormatFunc = (...args: any[]) => string;

export interface ILocString {
  en: string | null | FormatFunc;
  ru: string | null | FormatFunc;
  be: string | null | FormatFunc;
};

export const stringResources = {
  askCompanyName: {
    en: 'Hi!\n\nTo receive payslips you need to sign up.\n\nEnter organization name.',
    ru: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –ª–∏—Å—Ç–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.',
    be: '–ü—Ä—ã–≤—ñ—Ç–∞–Ω–Ω–µ!\n\n–î–ª—è –∞—Ç—Ä—ã–º–∞–Ω–Ω—è —Ä–∞–∑–ª—ñ–∫–æ–≤—ã—Ö –ª—ñ—Å—Ç–∫–æ—û –Ω–µ–∞–±—Ö–æ–¥–Ω–∞ –∑–∞—Ä—ç–≥—ñ—Å—Ç—Ä–∞–≤–∞—Ü—Ü–∞.\n\n–£–≤—è–¥–∑—ñ—Ü–µ –Ω–∞–∑–≤—É –∞—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ã—ñ.'
  },
  unknownCompanyName: {
    en: null,
    ru: '–ú—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º.\n\n–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –æ—à–∏–±–ª–∏—Å—å –ø—Ä–∏ –≤–≤–æ–¥–µ –∏–ª–∏ –≤–∞—à–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º—É "–ì–µ–¥—ã–º–∏–Ω: –†–∞—Å—á–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã".\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —Ä–∞–∑.',
    be: null
  },
  unknownEmployee: {
    en: null,
    ru: '–ú—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —Ç–∞–∫–∏–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º.\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –í—ã —É–∫–∞–∑–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.',
    be: null
  },
  askPersonalNumber: {
    en: null,
    ru: '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∏–∑ –ø–∞—Å–ø–æ—Ä—Ç–∞.',
    be: '–£–≤—è–¥–∑—ñ—Ü–µ —Å–≤–æ–π –ø–µ—Ä—Å–∞–Ω–∞–ª—å–Ω—ã —ñ–¥—ç–Ω—Ç—ã—Ñ—ñ–∫–∞—Ü—ã–π–Ω—ã –Ω—É–º–∞—Ä –∑ –ø–∞—à–ø–∞—Ä—Ç—É.'
  },
  mainMenuCaption: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é.',
    be: '–í—ã–±—è—Ä—ã—Ü–µ –∫–∞–º–∞–Ω–¥—É –∑ –º–µ–Ω—é.'
  },
  goodbye: {
    en: null,
    ru: '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏ —Å –Ω–∞–º–∏.\n\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤–≤–µ–¥–∏—Ç–µ\n–∫–æ–º–∞–Ω–¥—É /start',
    be: '–î–∞ –ø–∞–±–∞—á—ç–Ω–Ω—è! –î–∑—è–∫—É–π, —à—Ç–æ –±—ã–ª—ñ –∑ –Ω–∞–º—ñ.\n\n–ö–∞–± —Ä–∞—Å–ø–∞—á–∞—Ü—å –Ω–æ–≤—É—é —Ä—ç–≥—ñ—Å—Ç—Ä–∞—Ü—ã—é —û–≤—è–¥–∑—ñ—Ü–µ\n–∫–∞–º–∞–Ω–¥—É /start'
  },
  noData: {
    en: null,
    ru: 'üòï –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥!',
    be: 'üòï –ù—è–º–∞ –¥–∞–¥–∑–µ–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω—ã –ø–µ—Ä—ã—è–¥!'
  },
  weAreLost: {
    en: null,
    ru: 'üòï –ò–∑–≤–∏–Ω–∏—Ç–µ, —è —Ç—É—Ç –Ω–µ–º–Ω–æ–≥–æ –∑–∞–ø—É—Ç–∞–ª—Å—è. –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–∞—á–∞–ª–∞.',
    be: 'üòï –í—ã–±–∞—á–∞–π—Ü–µ, —è —Ç—É—Ç –∫—Ä—ã—Ö—É –∑–∞–±–ª—ã—Ç–∞—û—Å—è. –ü–∞—á–Ω—ñ—Ü–µ –∑ –ø–∞—á–∞—Ç–∫—É.'
  },
  showSettings: {
    en: null,
    ru: (employee: string, lang: Language, curr: string) => `–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\t–°–æ—Ç—Ä—É–¥–Ω–∏–∫: ${employee}\n\t–Ø–∑—ã–∫: ${lang}\n\t–í–∞–ª—é—Ç–∞: ${curr}`,
    be: (employee: string, lang: Language, curr: string) => `–ë—è–≥—É—á—ã—è –Ω–∞—Å—Ç—Ä–æ–π–∫—ñ:\n\t–°—É–ø—Ä–∞—Ü–æ—û–Ω—ñ–∫: ${employee}\n\t–ú–æ–≤–∞: ${lang}\n\t–í–∞–ª—é—Ç–∞: ${curr}`
  } as ILocString,
  showSelectedDate: {
    en: null,
    ru: (d: IDate) => `–í—ã–±—Ä–∞–Ω –º–µ—Å—è—Ü ${d.month + 1}.${d.year}`,
    be: (d: IDate) => `–í—ã–±—Ä–∞–Ω—ã –º–µ—Å—è—Ü ${d.month + 1}.${d.year}`
  },
  shortMonth0: {
    en: 'jan',
    ru: '—è–Ω–≤',
    be: '—Å—Ç—É'
  },
  shortMonth1: {
    en: 'feb',
    ru: '—Ñ–µ–≤',
    be: '–ª—é—Ç'
  },
  shortMonth2: {
    en: 'mar',
    ru: '–º–∞—Ä',
    be: '—Å–∞–∫'
  },
  shortMonth3: {
    en: 'apr',
    ru: '–∞–ø—Ä',
    be: '–∫—Ä–∞'
  },
  shortMonth4: {
    en: 'may',
    ru: '–º–∞–π',
    be: '—Ç—Ä–∞'
  },
  shortMonth5: {
    en: 'jun',
    ru: '–∏—é–Ω',
    be: '—á—ç—Ä'
  },
  shortMonth6: {
    en: 'jul',
    ru: '–∏—é–ª',
    be: '–ªi–ø'
  },
  shortMonth7: {
    en: 'aug',
    ru: '–∞–≤–≥',
    be: '–∂–Ωi'
  },
  shortMonth8: {
    en: 'sep',
    ru: '—Å–µ–Ω',
    be: '–≤–µ—Ä'
  },
  shortMonth9: {
    en: 'oct',
    ru: '–æ–∫—Ç',
    be: '–∫–∞—Å'
  },
  shortMonth10: {
    en: 'nov',
    ru: '–Ω–æ—è',
    be: '–ª—ñ—Å'
  },
  shortMonth11: {
    en: 'dec',
    ru: '–¥–µ–∫',
    be: '—Å–Ω–µ'
  },
  selectDB: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞.',
    be: null
  },
  selectDE: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞.',
    be: null
  },
  selectDB2: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.',
    be: null
  },
  selectMonth: {
    en: null,
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü.',
    be: null
  },
  menuPayslip: {
    en: null,
    ru: 'üí∞ –†–∞—Å—á–µ—Ç–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: 'üí∞ –†–∞–∑–ª—ñ–∫–æ–≤—ã –ª—ñ—Å—Ç–æ–∫',
  },
  menuDetailedPayslip: {
    en: null,
    ru: 'üí∞ –ü–æ–¥—Ä–æ–±–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: null
  },
  menuPayslipForPeriod: {
    en: null,
    ru: 'üí∞ –õ–∏—Å—Ç–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥',
    be: null
  },
  menuComparePayslip: {
    en: null,
    ru: 'üí∞ –°—Ä–∞–≤–Ω–∏—Ç—å...',
    be: null
  },
  menuSettings: {
    en: null,
    ru: 'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏',
    be: null
  },
  menuLogout: {
    en: null,
    ru: 'üö™ –í—ã–π—Ç–∏',
    be: null
  },
  menuHelp: {
    en: null,
    ru: '‚ùì',
    be: null
  },
  menuSelectLanguage: {
    en: null,
    ru: '–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫',
    be: null
  },
  menuSelectCurrency: {
    en: null,
    ru: '–í—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É',
    be: null
  },
  languageRU: {
    en: null,
    ru: '–†—É—Å—Å–∫–∏–π',
    be: null
  },
  languageBE: {
    en: null,
    ru: '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π',
    be: '–ë–µ–ª–∞—Ä—É—Å–∫–∞—è'
  },
  languageEN: {
    en: null,
    ru: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
    be: null
  },
  currencyBYN: {
    en: null,
    ru: '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å',
    be: null
  },
  currencyUSD: {
    en: null,
    ru: '–î–æ–ª–ª–∞—Ä –°–®–ê',
    be: null
  },
  currencyEUR: {
    en: null,
    ru: '–ï–≤—Ä–æ',
    be: null
  },
  currencyRUR: {
    en: null,
    ru: '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å',
    be: null
  },
  currencyPLN: {
    en: null,
    ru: '–ü–æ–ª—å—Å–∫–∏–π –∑–ª–æ—Ç—ã–π',
    be: null
  },
  currencyUAH: {
    en: null,
    ru: '–£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≥—Ä–∏–≤–Ω–∞',
    be: null
  },
  btnPrevYear: {
    en: null,
    ru: ' < ',
    be: null
  },
  btnNextYear: {
    en: null,
    ru: ' > ',
    be: null
  },
  btnBackToMenu: {
    en: null,
    ru: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...',
    be: null
  },
  btnBackToSettingsMenu: {
    en: null,
    ru: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...',
    be: null
  },
  cantLoadRate: {
    en: null,
    ru: (currencyId: string) => `–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã ${currencyId}`,
    be: null
  } as ILocString,
  payslipTitle: {
    en: 'Payslip',
    ru: '–†–∞—Å—á–µ—Ç–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: '–†–∞–∑–ª—ñ–∫–æ–≤—ã –ª—ñ—Å—Ç–æ–∫'
  },
  comparativePayslipTitle: {
    en: 'Comparative payslip',
    ru: '–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: '–ü–∞—Ä–∞—û–Ω–∞–ª—å–Ω—ã –ª—ñ—Å—Ç–æ–∫'
  },
  hours: {
    en: 'h.',
    ru: '—á.',
    be: '–≥.'
  },
  days: {
    en: 'd.',
    ru: '–¥.',
    be: '–¥.'
  },
  paySlip_Department: {
    en: 'Department:',
    ru: '–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:',
    be: '–ü–∞–¥—Ä–∞–∑–¥–∑—è–ª–µ–Ω–Ω–µ:'
  },
  paySlip_Position: {
    en: 'Position:',
    ru: '–î–æ–ª–∂–Ω–æ—Å—Ç—å:',
    be: '–ü–∞—Å–∞–¥–∞:'
  },
  paySlip_Salary: {
    en: 'Salary:',
    ru: '–û–∫–ª–∞–¥:',
    be: '–ê–∫–ª–∞–¥:'
  },
  paySlip_Hpr: {
    en: 'HPR:',
    ru: '–ß–¢–°:',
    be: '–ì–¢–°:'
  },
  paySlip_Accrued: {
    en: 'Accrued:',
    ru: '–ù–∞—á–∏—Å–ª–µ–Ω–æ:',
    be: '–ù–∞–ª—ñ—á–∞–Ω–∞:'
  },
  paySlip_Netsalary: {
    en: 'Net salary:',
    ru: '–ù–∞—á–∏—Å–ª–µ–Ω–æ:',
    be: '–ó–∞—Ä–ø–ª–∞—Ç–∞ —á—ã—Å—Ç—ã–º—ñ:'
  },
  paySlip_Deductions: {
    en: '  Deductions:',
    ru: '  –£–¥–µ—Ä–∂–∞–Ω–∏—è:',
    be: '  –é—Ç—Ä—ã–º–∞–Ω–Ω—è:'
  },
  paySlip_Advance: {
    en: '  Advance:',
    ru: '  –ê–≤–∞–Ω—Å:',
    be: '  –ê–≤–∞–Ω—Å:'
  },
  paySlip_Payroll: {
    en: '  PayRoll:',
    ru: '  –ö –≤—ã–¥–∞—á–µ:',
    be: '  –î–∞ –≤—ã–¥–∞—á—ã:'
  },
  paySlip_Taxes: {
    en: 'Taxes:',
    ru: '–ù–∞–ª–æ–≥–∏:',
    be: '–ü–∞–¥–∞—Ç–∫i:'
  },
  paySlip_Incometax: {
    en: '  Income:',
    ru: '  –ü–æ–¥–æ—Ö–æ–¥–Ω—ã–π:',
    be: '  –ü–∞–¥–∞—Ö–æ–¥–Ω—ã:'
  },
  paySlip_PensionTax: {
    en: '  Pension:',
    ru: '  –ü–æ–¥–æ—Ö–æ–¥–Ω—ã–π:',
    be: '  –ü–∞–¥–∞—Ö–æ–¥–Ω—ã:'
  },
  paySlip_TradeUnionTax: {
    en: '  Trade-union:',
    ru: '  –ü—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã–π:',
    be: '  –ü—Ä–∞—Ñ—Å–∞—é–∑–Ω—ã:'
  },
  paySlip_Privilages: {
    en: 'Privilages:',
    ru: '–õ—å–≥–æ—Ç—ã:',
    be: '–õ—å–≥–æ—Ç—ã:'
  },
  paySlip_DeductionsWOSpace: {
    en: 'Deductions:',
    ru: '–£–¥–µ—Ä–∂–∞–Ω–∏—è:',
    be: '–é—Ç—Ä—ã–º–∞–Ω–Ω—è:'
  },
  paySlip_AdvanceWOSpace: {
    en: 'Advance:',
    ru: '–ê–≤–∞–Ω—Å:',
    be: '–ê–≤–∞–Ω—Å:'
  },
  paySlip_TaxDeduction: {
    en: 'Tax deduction:',
    ru: '–í—ã—á–µ—Ç—ã:',
    be: '–í—ã–ªi–∫i:'
  },
  paySlip_Period: {
    en: 'Period: ',
    ru: '–ü–µ—Ä–∏–æ–¥: ',
    be: '–ü–µ—Ä—ã—è–¥: '
  },
  paySlip_Currency: {
    en: (currency: string, currencyRate?: ICurrencyRate) => 'Currency: ' + (
      currencyRate
        ? `${currency}, exchange rate ${currencyRate.rate.toFixed(2)} on ${date2str(currencyRate.date, 'DD.MM.YY')}`
        : 'Belarusian ruble'),
    ru: (currency: string, currencyRate?: ICurrencyRate) => '–í–∞–ª—é—Ç–∞: ' + (
      currencyRate
        ? `${currency}, –∫—É—Ä—Å ${currencyRate.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate.date, 'DD.MM.YY')}`
        : '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å'),
    be: (currency: string, currencyRate?: ICurrencyRate) => '–í–∞–ª—é—Ç–∞: ' + (
      currencyRate
        ? `${currency}, –∫—É—Ä—Å ${currencyRate.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate.date, 'DD.MM.YY')}`
        : '–ë–µ–ª–∞—Ä—É—Å–∫—ñ —Ä—É–±–µ–ª—å')
  },
  paySlip_CurrencyCompare: {
    en: (currency: string, currencyRate?: ICurrencyRate, currencyRate2?: ICurrencyRate) => 'Currency: ' + (
      currencyRate && currencyRate2
        ? `${currency}\exchange rate ${currencyRate.rate.toFixed(2)} on ${date2str(currencyRate.date, 'DD.MM.YY')}\n${currencyRate2.rate.toFixed(2)} on ${date2str(currencyRate2.date, 'DD.MM.YY')}`
        : 'Belarusian ruble'),
    ru: (currency: string, currencyRate?: ICurrencyRate, currencyRate2?: ICurrencyRate) => '–í–∞–ª—é—Ç–∞: ' + (
      currencyRate && currencyRate2
        ? `${currency}\n–∫—É—Ä—Å ${currencyRate.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate.date, 'DD.MM.YY')}\n${currencyRate2.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate2.date, 'DD.MM.YY')}`
        : '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å'),
    be: (currency: string, currencyRate?: ICurrencyRate, currencyRate2?: ICurrencyRate) => '–í–∞–ª—é—Ç–∞: ' + (
      currencyRate && currencyRate2
        ? `${currency}\n–∫—É—Ä—Å ${currencyRate.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate.date, 'DD.MM.YY')}\n${currencyRate2.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate2.date, 'DD.MM.YY')}`
        : '–ë–µ–ª–∞—Ä—É—Å–∫—ñ —Ä—É–±–µ–ª—å')
  },
  paySlip_CurrencyPeriod: {
    en: (db: IDate, de: IDate, db2: IDate, de2: IDate) => 'Period:\n' + (de.year !== db.year || de.month !== db.month
        ? `${db.month + 1}.${db.year}-${de.month + 1}.${de.year}`
        : `${new Date(db.year, db.month).toLocaleDateString('en', { month: 'long', year: 'numeric' })}`
      ) + ' to ' + (de2.year !== db2.year || de2.month !== db2.month
        ? `${db2.month + 1}.${db2.year}-${de2.month + 1}.${de2.year}`
        : `${new Date(db2.year, db2.month).toLocaleDateString('en', { month: 'long', year: 'numeric' })}`
      ),
    ru: (db: IDate, de: IDate, db2: IDate, de2: IDate) => '–ü–µ—Ä–∏–æ–¥:\n' + (de.year !== db.year || de.month !== db.month
        ? `${db.month + 1}.${db.year}-${de.month + 1}.${de.year}`
        : `${new Date(db.year, db.month).toLocaleDateString('ru', { month: 'long', year: 'numeric' })}`
      ) + ' –∫ ' + (de2.year !== db2.year || de2.month !== db2.month
        ? `${db2.month + 1}.${db2.year}-${de2.month + 1}.${de2.year}`
        : `${new Date(db2.year, db2.month).toLocaleDateString('ru', { month: 'long', year: 'numeric' })}`
      ),
    be:(db: IDate, de: IDate, db2: IDate, de2: IDate) => '–ü–µ—Ä—ã—è–¥:\n' + (de.year !== db.year || de.month !== db.month
        ? `${db.month + 1}.${db.year}-${de.month + 1}.${de.year}`
        : `${new Date(db.year, db.month).toLocaleDateString('be', { month: 'long', year: 'numeric' })}`
      ) + ' –¥–∞ ' + (de2.year !== db2.year || de2.month !== db2.month
        ? `${db2.month + 1}.${db2.year}-${de2.month + 1}.${de2.year}`
        : `${new Date(db2.year, db2.month).toLocaleDateString('be', { month: 'long', year: 'numeric' })}`
      )
  }
};

export type Language = keyof ILocString;
export type StringResource = keyof typeof stringResources;

export const getLocString = (r: ILocString, lang: Language, ...args: any[]) => {
  const sr = r[lang]
    ?? r['ru']
    ?? r['be']
    ?? r['en'];

  if (typeof sr === 'function') {
    return sr(...args);
  }
  else if (sr === null) {
    throw new Error(`String resource isn't defined for a given lanuage.`)
  } else {
    return sr;
  }
};

export const str2Language = (s?: string): Language => {
  switch (s?.toLowerCase()) {
    case 'be': return 'be';
    case 'en': return 'en';
  default:
    return 'ru';
  }
};

export interface ITName {
  name: string;
  fullName?: string;
};

export type LName = {
  [lang in Language]?: ITName;
};

export function getLName(n: LName, langPref: Language[] = [], getFullName: boolean = false): string {
  for (let i = 0; i < langPref.length; i++) {
    const tn = n[langPref[i]];
    if (tn) {
      return (getFullName && tn.fullName) ? tn.fullName : tn.name;
    }
  }

  return (
    (getFullName ? n.ru?.fullName : undefined) ?? n.ru?.name ??
    (getFullName ? n.be?.fullName : undefined) ?? n.be?.name ??
    (getFullName ? n.en?.fullName : undefined) ?? n.en?.name ??
    ''
  );
};
